@using PizzaWebsite.Models.ManageWebsite
@using PizzaWebsite.Models.ManageWebsite.Menus
@model ManageMenuPizzaCrustFlavorViewModel

@{
    if (Model.IsNewRecord())
    {
        ViewBag.Title = "Add New Crust Flavor";
        <h2>Add New Crust Flavor</h2>
    }
    else
    {
        ViewBag.Title = "Edit Crust Flavor";
        <h2>Edit Crust Flavor</h2>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.SortOrder)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableForPurchase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AvailableForPurchase)
                    @Html.ValidationMessageFor(model => model.AvailableForPurchase, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasMenuIcon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasMenuIcon)
                    @Html.ValidationMessageFor(model => model.HasMenuIcon, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuIconFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MenuIconFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MenuIconFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasPizzaBuilderImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasPizzaBuilderImage)
                    @Html.ValidationMessageFor(model => model.HasPizzaBuilderImage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PizzaBuilderImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PizzaBuilderImageFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PizzaBuilderImageFile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.IsNewRecord())
                {
                    <input type="submit" value="Add New Crust Flavor" class="btn btn-default" />
                }
                else
                {
                    <input type="submit" value="Apply Changes" class="btn btn-default" />
                }
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")?@(Request.QueryString)">
        <input type="button" value="Back" class="btn btn-default" />
    </a>
</div>