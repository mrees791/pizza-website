@using Microsoft.Owin.Security
@model PizzaWebsite.ViewModels.Home.SignInViewModel

@{
    ViewBag.Title = "Sign In";
}

<h2>Sign In</h2>

@if (Model.UserIsSignedIn)
{
    <p>@Model.AlreadySignedInMessage</p>
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sign In" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    if (Model.LoginProviders.Any())
    {
        using (Html.BeginForm("ExternalLogin", "Home", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()

            <div>
                <p>
                    @foreach (AuthenticationDescription ad in Model.LoginProviders)
                    {
                        <button type="submit" class="btn btn-default"
                                id="@ad.AuthenticationType"
                                name="provider"
                                value="@ad.AuthenticationType"
                                title="Sign in using your @ad.Caption account">Sign in with @ad.AuthenticationType</button>
                        }
                </p>
            </div>
        }
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}