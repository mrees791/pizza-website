@using PizzaWebsite.Models.PizzaBuilders
@model PizzaBuilderViewModel
@* This partial view must be placed inside a POST form. *@
@* Save list state *@
@for (int i = 0; i < Model.SauceDictionary.Count; i++)
{
    KeyValuePair<int, string> saucePair = Model.SauceDictionary.ElementAt(i);
    <input type="hidden" name="SauceDictionary[@i].Key" value="@saucePair.Key" />
    <input type="hidden" name="SauceDictionary[@i].Value" value="@saucePair.Value" />
}
@for (int i = 0; i < Model.SauceAmountList.Count; i++)
{
    <input type="hidden" name="SauceAmountList[@i]" value="@Model.SauceAmountList[i]" />
}
@for (int i = 0; i < Model.CheeseDictionary.Count; i++)
{
    KeyValuePair<int, string> cheesePair = Model.CheeseDictionary.ElementAt(i);
    <input type="hidden" name="CheeseDictionary[@i].Key" value="@cheesePair.Key" />
    <input type="hidden" name="CheeseDictionary[@i].Value" value="@cheesePair.Value" />
}
@for (int i = 0; i < Model.CheeseAmountList.Count; i++)
{
    <input type="hidden" name="CheeseAmountList[@i]" value="@Model.CheeseAmountList[i]" />
}
@for (int i = 0; i < Model.CrustFlavorDictionary.Count; i++)
{
    KeyValuePair<int, string> crustFlavorPair = Model.CrustFlavorDictionary.ElementAt(i);
    <input type="hidden" name="CrustFlavorDictionary[@i].Key" value="@crustFlavorPair.Key" />
    <input type="hidden" name="CrustFlavorDictionaryy[@i].Value" value="@crustFlavorPair.Value" />
}
<div class="form-group">
    @Html.LabelFor(model => model.SelectedSauceId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.SelectedSauceId, new SelectList(Model.SauceDictionary, "Key", "Value"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SelectedSauceId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SelectedSauceAmount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.SelectedSauceAmount, new SelectList(Model.SauceAmountList), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SelectedSauceAmount, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SelectedCheeseId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.SelectedCheeseId, new SelectList(Model.CheeseDictionary, "Key", "Value"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SelectedCheeseId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SelectedCheeseAmount, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.SelectedCheeseAmount, new SelectList(Model.CheeseAmountList), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SelectedCheeseAmount, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.SelectedCrustFlavorId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(m => m.SelectedCrustFlavorId, new SelectList(Model.CrustFlavorDictionary, "Key", "Value"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SelectedCrustFlavorId, "", new { @class = "text-danger" })
    </div>
</div>
<h4>Toppings</h4>
<h5>Meats</h5>
@foreach (PizzaToppingViewModel toppingVm in Model.MeatToppingVmList)
{
    @Html.Partial("_PizzaBuilderTopping", toppingVm)
}
<h5>Veggies</h5>
@foreach (PizzaToppingViewModel toppingVm in Model.VeggieToppingVmList)
{
    @Html.Partial("_PizzaBuilderTopping", toppingVm)
}