@model PizzaWebsite.Models.ManageListViewModel<PizzaWebsite.Models.ManageUserViewModel, DataLibrary.Models.Tables.SiteUser, DataLibrary.Models.Filters.TableFilters.SiteUserFilter>

@{
    ViewBag.Title = "Manage Users";
}

<h2>Manage Users</h2>

<div>
    @using (Html.BeginForm("ManageUsers", "ManageWebsite", FormMethod.Get))
    {
        <input type="hidden" name="Page" value="1" />
        @Html.Hidden("RowsPerPage", Request["RowsPerPage"])
        @Html.Label("UserName", "User Name")
        @Html.TextBox("UserName", Request["UserName"], new { @class = "form-control" })
        @Html.Label("Email", "Email")
        @Html.TextBox("Email", Request["Email"], new { @class = "form-control" })
        <input type="submit" value="Apply Search Filters" class="btn btn-default" />
    }
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ItemViewModel.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemViewModel.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ItemViewModel.IsBanned)
        </th>
        <th><!-- Empty header for edit column --></th>
    </tr>

    @foreach (var item in Model.ItemViewModelList)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsBanned)
            </td>
            <td>
                <a href="@Url.Action("EditUser", "ManageWebsite")/@item.Id?@(Request.QueryString)">
                    <input type="button" value="Edit" class="btn btn-default" />
                </a>
            </td>
        </tr>
    }
</table>

<nav>
    <ul id="managePagination" class="pagination">
    </ul>
</nav>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            pizzaSiteNs.createPagination('#managePagination', @Model.PaginationVm.CurrentPage, @Model.PaginationVm.RowsPerPage, @Model.PaginationVm.TotalPages, @Model.PaginationVm.TotalNumberOfItems);
        });
    </script>
}