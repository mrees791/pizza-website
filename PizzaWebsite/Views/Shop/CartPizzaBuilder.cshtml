@model PizzaWebsite.Models.PizzaBuilders.CartPizzaBuilderViewModel

@{
    ViewBag.Title = "Pizza Builder";
}
<h2>Pizza Builder</h2>

@Html.ActionLink("Back", "PizzaMenu", "Shop", new { }, new { @class = "btn btn-primary" })

@using (Html.BeginForm("BuildPizza", "Shop", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < Model.QuantityList.Count; i++)
                {
                    <input type="hidden" name="QuantityList[@i]" value="@(i+1)">
                }
                @Html.DropDownListFor(m => m.SelectedQuantity, new SelectList(Model.QuantityList, Model.SelectedQuantity), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedSize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < Model.SizeList.Count; i++)
                {
                    <input type="hidden" name="SizeList[@i]" value="@Model.SizeList[i]" />
                }
                @Html.DropDownListFor(m => m.SelectedSize, new SelectList(Model.SizeList, Model.SelectedSize), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CrustList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < Model.CrustList.Count; i++)
                {
                    KeyValuePair<int, string> crustPair = Model.CrustList.ElementAt(i);
                    <input type="hidden" name="CrustList[@i].Key" value="@crustPair.Key" />
                    <input type="hidden" name="CrustList[@i].Value" value="@crustPair.Value" />
                }
                @Html.DropDownListFor(m => m.SelectedCrustId, new SelectList(Model.CrustList, "Key", "Value"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedCrustId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.Partial("_PizzaBuilder", Model)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.IsNewRecord())
                {
                    <input type="submit" value="Add to Cart" class="btn btn-success" />
                }
                else
                {
                    <input type="submit" value="Apply Changes" class="btn btn-success" />
                }
            </div>
        </div>
    </div>
}