@using PizzaWebsite.Models
@model PizzaWebsite.Models.CartViewModel

@{
    ViewBag.Title = "Cart";
}

<h2>Cart</h2>

<div id="emptyCartBlock" style="display: none;">
    <p>Your cart is empty.</p>
</div>
<div id="cartBlock" style="display: none;">
    <table class="table" id="cartTable">
        <thead>
            <tr>
                <th>Item</th>
                <th>Description</th>
                <th>Price</th>
                <th>Quantity</th>
                @* Empty table header for controls. *@
                <th></th>
            </tr>
        </thead>
        <tbody id="cartTableBody">
            @foreach (CartItemViewModel cartItemVm in Model.CartItemList)
            {
                <tr id="@cartItemVm.CartItemRowId">
                    <td>@cartItemVm.Name</td>
                    <td>@Html.Raw(cartItemVm.Description)</td>
                    <td>@cartItemVm.Price</td>
                    <td>
                        @Html.DropDownList("Quantity", new SelectList(cartItemVm.QuantityList, cartItemVm.Quantity),
                            new
                            {
                                @class = "form-control",
                                id = cartItemVm.CartItemQuantitySelectId,
                                name = "Quantity"
                            })
                    </td>
                    <td>
                        <input type="button" value="Delete" id="@cartItemVm.CartItemDeleteButtonId" class="form-control" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            pizzaSiteCartNs.updateCartElementVisibility();
        });
    </script>
    @* Cart item controls. *@
    @foreach (CartItemViewModel cartItemVm in Model.CartItemList)
    {
        <script type="text/javascript">
            $(function () {
                var rowId = '#@cartItemVm.CartItemRowId';
                var quantitySelectId = '#@cartItemVm.CartItemQuantitySelectId';
                var deleteButtonId = '#@cartItemVm.CartItemDeleteButtonId';
                // Update cart item quantity
                $(quantitySelectId).on("change", function () {
                    var quantity = $(quantitySelectId).val();
                    var params = { cartItemId: @cartItemVm.CartItemId, quantity: quantity };
                    pizzaSiteNs.ajaxCall('/Shop/UpdateCartItemQuantity', JSON.stringify(params), 'POST').fail(function (error) {
			            alert(error.statusText);
		            });
                });
                // Delete cart item
                $(deleteButtonId).on("click", function () {
                    var params = { cartItemId: @cartItemVm.CartItemId };
                    pizzaSiteNs.ajaxCall('/Shop/DeleteCartItem', JSON.stringify(params), 'POST').
                        fail(function (error) {
                            alert(error.statusText);
                        }).
                        done(function () {
                            $(rowId).remove();
                            pizzaSiteCartNs.updateCartElementVisibility();
                        });
                });
            });
        </script>
    }
}