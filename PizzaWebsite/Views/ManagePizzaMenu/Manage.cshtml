@using PizzaWebsite.Models.ManageMenus
@model ManageMenuPizzaViewModel
@{
    if (Model.IsNewRecord())
    {
        ViewBag.Title = "Add New Pizza";
    }
    else
    {
        ViewBag.Title = "Edit Pizza";
    }
}
<h2>@ViewBag.Title</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Employee")">Home</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "ManageMenu")">Manage Menu</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "ManagePizzaMenu")?@Request.QueryString">Manage Pizza Menu</a></li>
        <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
    </ol>
</nav>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @* Save list state *@
    for (int i = 0; i < Model.CategoryList.Count(); i++)
    {
        <input type="hidden" name="CategoryList[@i]" value="@Model.CategoryList.ElementAt(i)" />
    }
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.SortOrder)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AvailableForPurchase, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AvailableForPurchase)
                    @Html.ValidationMessageFor(model => model.AvailableForPurchase, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCategory, new SelectList(Model.CategoryList), "Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.Partial("_PizzaBuilder", Model)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.IsNewRecord())
                {
                    <input type="submit" value="Add New Pizza" class="btn btn-success" />
                }
                else
                {
                    <input type="submit" value="Apply Changes" class="btn btn-success" />
                }
            </div>
        </div>
    </div>
}