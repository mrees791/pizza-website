@using PizzaWebsite.Models.ManageWebsite
@model EmployeeRosterViewModel
@{
    ViewBag.Title = $"Employee Roster";
}

<h2>Employee Roster</h2>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "ManageWebsite")">Home</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "ManageStores")?@Request.QueryString">Manage Stores</a></li>
        <li class="breadcrumb-item active" aria-current="page">Employee Roster</li>
    </ol>
</nav>
<hr />


@if (Model.RosterIsEmpty())
{
    <h3>@($"{Model.StoreName} Employees")</h3>
    <p>This location does not have any employees.</p>
    <div>
        <a href="@Url.Action("AddEmployeeToRoster")/@Model.StoreId?@(Request.QueryString)">
            <input type="button" value="Add Employee" class="btn btn-primary" />
        </a>
    </div>
}
else
{
    <h3>@($"{Model.StoreName} Employees")</h3>
    @* todo: Display employee roster list here*@
    <div>
        <a href="@Url.Action("AddEmployeeToRoster")/@Model.StoreId?@(Request.QueryString)">
            <input type="button" value="Add Employee" class="btn btn-primary" />
        </a>
    </div>

    <ul>
        @* This list will need to store the ID of the EmployeeLocation record. *@
        @foreach (EmployeeRosterItemViewModel employeeItem in Model.EmployeeRosterList)
        {
            <li>@employeeItem.EmployeeId</li>
        }
    </ul>
}