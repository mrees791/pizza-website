@using PizzaWebsite.Models.ManageStores
@model EmployeeRosterViewModel
@{
    ViewBag.Title = $"Employee Roster";
}

<h2>Employee Roster</h2>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Employee")">Home</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "ManageStores")?@Request.QueryString">Manage Stores</a></li>
        <li class="breadcrumb-item active" aria-current="page">Employee Roster</li>
    </ol>
</nav>
<hr />

<h3>@($"{Model.StoreName} Employees")</h3>

@if (Model.RosterIsEmpty())
{
    <p>This location does not have any employees.</p>
    <div>
        <a href="@Url.Action("AddEmployeeToRoster")/@Model.StoreId?@(Request.QueryString)">
            <input type="button" value="Add Employee" class="btn btn-primary" />
        </a>
    </div>
}
else
{
    <div>
        <a href="@Url.Action("AddEmployeeToRoster")/@Model.StoreId?@(Request.QueryString)">
            <input type="button" value="Add Employee" class="btn btn-primary" />
        </a>
    </div>
    <table class="table">
        <tr>
            <th>Employee ID</th>
            <th>Is Manager</th>
            @* Empty column for Remove button. *@
            <th></th>
        </tr>
        @foreach (EmployeeRosterItemViewModel item in Model.EmployeeRosterList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsManager)
                </td>
                <td>
                    <a href="@Url.Action("RemoveEmployeeFromRoster")/@item.EmployeeLocationId?@(Request.QueryString)">
                        <input type="button" value="Remove" class="btn btn-danger" />
                    </a>
                </td>
            </tr>
        }
    </table>
}