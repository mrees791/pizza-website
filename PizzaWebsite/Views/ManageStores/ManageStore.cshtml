@model PizzaWebsite.Models.ManageStores.ManageStoreViewModel
@{
    if (Model.IsNewRecord())
    {
        ViewBag.Title = "Create Store";
    }
    else
    {
        ViewBag.Title = "Edit Store";
    }
}
<h2>@ViewBag.Title</h2>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "Employee")">Home</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index", "ManageStores")?@Request.QueryString">Manage Stores</a>
        </li>
        <li class="breadcrumb-item active" aria-current="page">@ViewBag.Title</li>
    </ol>
</nav>
<hr/>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @* Save list state *@
    for (int i = 0; i < Model.StateList.Count(); i++)
    {
        <input type="hidden" name="StateList[@i].Name" value="@Model.StateList.ElementAt(i).Name">
        <input type="hidden" name="StateList[@i].Abbreviation" value="@Model.StateList.ElementAt(i).Abbreviation">
    }
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StreetAddress, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.StreetAddress, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.StreetAddress, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SelectedState, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedState, new SelectList(Model.StateList.Select(l => l.Abbreviation)), "State", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.SelectedState, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ZipCode, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActiveLocation, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActiveLocation)
                    @Html.ValidationMessageFor(model => model.IsActiveLocation, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.IsNewRecord())
                {
                    <input type="submit" value="Create New Store" class="btn btn-success"/>
                }
                else
                {
                    <input type="submit" value="Apply Changes" class="btn btn-success"/>
                }
            </div>
        </div>
    </div>
}